import JWT from 'jsonwebtoken'

/**
 * Function generate token need 3 param:
 * userInfo: Information of user wanna attach to token
 * secretSignature (privateKey): Secret key to sign token
 * tokenLife: Expiration time of token
 */
const generateToken = async (userInfo, secretSignature, tokenLife) => {
  try {
    return JWT.sign(userInfo, secretSignature, { expiresIn: tokenLife, algorithm: 'HS256' })
  } catch (error) {
    throw new Error(error)
  }
}

/**
 * Function to verify whether the token is valid or not
 * Valid here mean the token is generated by correct secret key in the same project
 */
const verifyToken = async (token, secretSignature) => {
  try {
    return JWT.verify(token, secretSignature)
  } catch (error) {
    throw new Error(error)
  }
}

export const JwtProvider = {
  generateToken,
  verifyToken
}
